{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Project Setup",
      "detail": "Dependency management tasks",
      "dependsOrder": "sequence",
      "dependsOn": [
        "Install Dependencies",
        "Update Dependencies"
      ],
      "group": "test",
      "problemMatcher": []
    },
    {
      "label": "Install Dependencies",
      "type": "shell",
      "command": "make install-deps",
      "detail": "Install exact package versions"
    },
    {
      "label": "Update Dependencies",
      "type": "shell",
      "command": "make update-deps",
      "detail": "Update to latest compatible versions"
    },
    {
      "label": "Development Server",
      "type": "shell",
      "command": "make dev-server",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "focus": true
      },
      "isBackground": true,
      "options": {
        "statusbar": {
          "label": "$(rocket) Dev Server",
          "priority": 1
        }
      }
    },
    {
      "label": "Build System",
      "detail": "Production build workflows",
      "dependsOrder": "sequence",
      "dependsOn": [
        "Build Production",
        "Preview Build",
        "Deploy Docs"
      ],
      "group": "build",
      "problemMatcher": []
    },
    {
      "label": "Build Production",
      "type": "shell",
      "command": "make build",
      "problemMatcher": [
        "$tsc",
        "$eslint-stylish"
      ]
    },
    {
      "label": "Preview Build",
      "type": "shell",
      "command": "make preview",
      "dependsOn": "Build Production"
    },
    {
      "label": "Deploy Docs",
      "type": "shell",
      "command": "make deploy",
      "dependsOn": "Build Production"
    },
    {
      "label": "Code Quality",
      "detail": "Code validation tasks",
      "dependsOrder": "parallel",
      "dependsOn": [
        "Type Check",
        "Lint Project",
        "Run Tests"
      ],
      "group": "test",
      "problemMatcher": []
    },
    {
      "label": "Type Check",
      "type": "shell",
      "command": "make typecheck",
      "problemMatcher": "$tsc"
    },
    {
      "label": "Type Check (Watch)",
      "type": "shell",
      "command": "make typecheck-watch",
      "problemMatcher": "$tsc-watch",
      "isBackground": true
    },
    {
      "label": "Lint Project",
      "type": "shell",
      "command": "make lint",
      "problemMatcher": "$eslint-stylish"
    },
    {
      "label": "Format Code",
      "type": "shell",
      "command": "make format"
    },
    {
      "label": "Run Tests",
      "type": "shell",
      "command": "make test",
      "group": "test",
      "problemMatcher": []
    },
    {
      "label": "Complete Validation",
      "type": "shell",
      "command": "make validate",
      "dependsOrder": "parallel",
      "dependsOn": [
        "Format Code",
        "Lint Project",
        "Type Check"
      ]
    },
    {
      "label": "Security Audit",
      "type": "shell",
      "command": "make security"
    },
    {
      "label": "Clear Cache",
      "type": "shell",
      "command": "make clean"
    },
    {
      "label": "CI Pipeline",
      "type": "shell",
      "command": "make ci",
      "group": "build"
    },
    {
      "label": "Swizzle Component",
      "type": "shell",
      "command": "make swizzle COMPONENT=${input:swizzleComponent}"
    },
    {
      "label": "Documentation Tasks",
      "detail": "Documentation management",
      "dependsOrder": "sequence",
      "dependsOn": [
        "Extract Translations",
        "Add Heading IDs"
      ],
      "group": "build",
      "problemMatcher": []
    },
    {
      "label": "Extract Translations",
      "type": "shell",
      "command": "make extract-translations"
    },
    {
      "label": "Add Heading IDs",
      "type": "shell",
      "command": "make add-heading-ids"
    }
  ],
  "inputs": [
    {
      "id": "swizzleComponent",
      "type": "promptString",
      "description": "Enter component name to swizzle (example: @docusaurus/theme-classic Footer):",
      "default": "@docusaurus/theme-classic"
    }
  ]
}